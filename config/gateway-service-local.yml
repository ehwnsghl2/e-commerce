spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods:
            - POST
            - GET
            - PATCH
            - PUT
            - OPTIONS
            - DELETE
      # 글로벌 타임아웃 설정
      httpclient:
        # 커넥션 타임아웃
        connect-timeout: 1000
        # 응답 타임아웃
        response-timeout: 10000
        #ssl:
        #  handshake-timeout-millis: 10000
        #  close-notify-flush-timeout-millis: 3000
        #  close-notify-read-timeout-millis: 0
      discovery:
        locator:
          enabled: true
      routes:
      # 해당 라우트의 고유 식별자
      - id: user
        # 해당 라우터의 주소
        uri: https://10.100.124.45:9001 #lb://user-service  # http://localhost:9001
        # 해당 라우터의 조건을 작성, /order/**으로 시작하는 요청의 경우 해당 라우터로 요청을 보냄
        predicates:
        - Path=/service/**
        #filters:
        # 해당 라우터의 필터로, RewritePath는 강제로 Patch를 다시 작성
        # 요청이 오면 /order/를 제거하고 order-service를 호출
        #- RewritePath=/service/(?<path>.*),/$\{path}
        - name: Retry
          args:
            retries: 3
            statuses: INTERNAL_SERVER_ERROR
            methods: GET,POST,PUT,PATCH
            backoff:
              firstBackoff: 1000ms
              maxBackoff: 6000ms
              factor: 2
              basedOnPreviousValue: false
              

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      healthcheck:
        enabled: true
    registry-fetch-interval-seconds: 5 # 서비스 목록 5초마다 캐싱(default : 30초)
    disable-delta: true # 캐싱할 때 변경된 부분만 업데이트(default : false)
    # 유레카 클라이언트 속성 변경 새로고침 비활성화
    refresh:
      enable: false
